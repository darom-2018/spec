Puslapiavimo mechanizmas
  Puslapiavimo mechanizmo įgyvendinimas remiasi dviem dalykais: realios mašinos
  registru PTR bei pusalpių lentelėmis.

  Registras PTR:
    Kadangi puslapių lentelė yra tiesiog tam tikra vieta pagrindinėje atmintyje,
    registras PTR yra būdas pasiekti tą atminties vietą.

    tai keturių baitų registras:
      |a0| |a1| |a2| |a3|
      ai - vienas baitas

      a0 - vartojo programos dydis
      a1 - puslapių lentelės dydis
      a2 - bloko numeris, kuriame yra puslapių lentelė
      a3 - poslinkis tame bloke

    Virtualios mašinos atmintis išskirstyta į tris sekcijas:
      stekas
      duomenys
      kodas

    Iš anksto sunku nustatyti fiksuotus sekcijų dydžius, kurie maksimaliai
    patenkintų visų įmanomų virtualių mašinų poreikius, mes norėtume optimizuoti
    atminties paskirstymą, kad kiekviena virtuali mašina pati galėtų prašyti tiek
    atminties (iki 16 blokų), kiek yra reikalinga jos darbui. Būtų gerai, jei
    virtuali mašina galėtų ne tik prašyti tam tikro kiekio virtualios atminties, bet
    ir suskirstyti ją taip, kad kodo segmentas ir duomenys / stekas gautų tiek blokų, kiek
    jiems reikia. Tokiu būdu galime optimizuoti pagrindinės atminties paskirstymą
    virtualioms mašinoms. Kad galėtume tai įgyvendinti, mums reikia žinoti, kiek
    atmintis skirti virtualios mašinos kodo segmentui ir kiek atminties reikės iš viso.
    Tam naudojami registrai a0 ir a1:

    a0 - vartotojo programos Kodo segmento dydis blokais [1, 7]
    a1 - kiek blokų atminties virtualiai mašinai reikia iš viso.

    Skaičius (16 * a2) + a3 žymi dabartinį PTR registrą atitinkančios puslapių
    lentelės pradžios absoliutų adresą. Reikia atsižvelgti ir į tai, kad
    projektuojamoje mašinoje pagrindinę atmintį sudaro tik 70 blokų po 16 žodžių,
    o a2 gali įgyti reikšmes [0, 255], todėl teks tikrinti, ar absoliutus adresas
    (a2, a3) nepatenka už pagrindinės atminties ribų.

    Jeigu turime virtualų adresą (x1, x2) (x1 - bloko numeris, x2 - poslinkis bloke),
    tai norėdami jį konvertuoti į realų adresą y turime pasitelkti PTR registrą:

    (16 * a2) + a3 - puslapių lentelės pirmo įrašo absoliutus adresas.
    ((16 * a2) + a3) + x1 - puslapių lentelės x1-ojo įrašo abosliutus adresas.
    [((16 * a2) + a3) + x1] - reikšmė įrašyta puslapių lentelės x1-ajame įraše.
    Ši reikšmė atitinka pagrindinės atminties bloko, kuris atitinka virtualios mašinos
    x1-ąjį bloką, numerį.
    16 * [((16 * a2) + a3) + x1] - x1-ąjį virtualios atminties bloką atitinkančio
    pagrindinės atminties bloko absoliutus adresas.

    y = 16 * [((16 * a2) + a3) + x1] + x2

    y - absoliutus adresas pagrindinėje atmintyje, atitinkantis virtualios mašinos
    adresą (x1, x2)

    Adresavimo validacija:
      a1 - kadangi puslapių lentelės dydis nėra fiksuotas (kiekviena VM gali turėti
      skirtingą skaičių jai išskirtų puslapių), kiekvieno vertimo iš virtualaus į realų
      adresą metu, turime tikrinti, kad x1 (reikalingas virtualios atminties blokas)
      nebūtų didesnis už a1 (maksimalų virtualios atminties blokų skaičių).

      adresas (a2, a3) nepatenka už pagrindinės atminties rėžių

      adresas (x1, x2) nepatenka už virtualios atminties rėžių.


  Puslapių lentelės:
    Puslapių lentelės yra būdas saugoti duomenis apie tai, kaip virtualios mašinos
    atmintis yra susieta su pagrindine mašinos atmintimi. Puslapių lentelė yra saugoma
    realios mašinos atmintyje. Puslapių lentelės dydis nėra fiksuotas visoms VM ir priklauso nuo to,
    kiek atminties blokų reikia virtualiai mašinai, kad ši galėtų sklandžiai atlikti savo
    vykdomą užduotį. Puslapių lentelę sudaro tiek žodžio dydžio įrašų, kiek blokų reikia
    virtualios mašinos atminčiai (kiekviena virtuali mašina turi po atskirą puslapių lentelę).
    Kiekvienas įrašas atitinka pagrindinės atmintis bloko numerį, kurį atitinka i-asis
    virtualios mašinos blokas. Pavyzdžiui, jei norime gauti 1-ojo virtualios atminties bloko
    abosliutų adresą, tai turėtume surasti virtualią mašiną atitinkančią puslapių lentelę
    (tam naudosime PTR registro duomenis) ir surasti antrąjį (nes numeracija prasideda nuo 0)
    jos įrašą. Ten bus saugomas bloko iš pagrindinės atminties numeris, kuris atitinka
    virtualios mašinos 1-ąjį bloką.
